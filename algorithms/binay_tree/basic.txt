Tree
===================
complete binary tree: 除最后一层外，每一层上的节点数均达到最大值；在最后一层上从左到右没有中间空着的节点
full binary tree: all parent nodes have two children nodes
blanced tree: 树的所有左右子树高度相差1以内，并且各自仍然是平衡树

level/height of root = 0

balanceFactor = height(leftSubTree)- height(rightSubTree)

常见题
-------------------
二叉树思路：将任务分解给左子树和右子树(divide)，然后给出解法(conquer)

非递归版本的preorder, inorder
max/min depth of binary tree (bfs, bfs-return on first leaf node)
lowest common ancestor (with or without parent pointer)
binary tree maximum path sum I, II
binary search tree iterator
validate binary search tree (inorder)
平衡二叉树：可能考

binary tree serialization
topological sort
BFS in chessboard
combination DFS
permutation DFS
graph DFS

Binary Search Tree
-------------------
树的所有左右子树左侧值都比右侧的小，不可以相等
H = log2(N+1)
search: O(N), insert: O(logN) ~ O(N)
